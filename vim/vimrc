" symlinked at ~/.vimrc

set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'

" The bundles you install will be listed ere
" Debug
Bundle 'fisadev/vim-debug.vim'
" Better file browser
Bundle 'scrooloose/nerdtree'
" Commenting
Bundle 'scrooloose/nerdcommenter'
" Class/module browser
Bundle 'majutsushi/tagbar'
" Zen coding
Bundle 'mattn/emmet-vim'
" Statusline
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" Git wrapper
Bundle 'tpope/vim-fugitive'
" Python autocompletion
Bundle 'davidhalter/jedi-vim'
" Tab completion
Bundle 'ervandew/supertab'
" Autoclose
Bundle 'Raimondi/delimitMate'
" Python mode (indentation, doc, refactor, lints, code checking, motion and
" operators, highlighting, run and ipdb breakpoints)
Bundle 'klen/python-mode'
" Provides motion hints
Bundle "Lokaltog/vim-easymotion"
" Surround selection with {parentheses|quotes|brackets|etc.}
Bundle "tpope/vim-surround"
" SnipMate - TextMate style snippets
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"
" Easytags - Automated tag generation
Bundle "xolox/vim-easytags"
" Javascript syntax highlighting
Bundle 'jelera/vim-javascript-syntax'
" Javascript indenting
Bundle 'pangloss/vim-javascript'
Bundle 'nathanaelkane/vim-indent-guides'
" Javascript linting
Bundle 'scrooloose/syntastic'
" Autocompletion
Bundle 'Valloric/YouCompleteMe'


" These are the tweaks I apply to YCM's config, you don't need them but they
" might help.
" " YCM gives you popups and splits by default that some people might not
" like, so these should tidy it up a bit for you.
" let g:ycm_add_preview_to_completeopt=0
" let g:ycm_confirm_extra_conf=0
" set completeopt-=preview

filetype plugin indent on
filetype plugin on
" Python-mode
" <C-c> Activate rope
" Keys:
" K             Show python docs
"   Rope autocomplete
" rr    Rope rename
" ro    Rope organize importo
" g     Rope goto definition
" d     Rope show documentation
" f     Rope find occurrences
" b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" [[            Jump on previous class or function (normal, visual, operator modes)
" ]]            Jump on next class or function (normal, visual, operator modes)
" [M            Jump on previous class or method (normal, visual, operator modes)
" ]M            Jump on next class or method (normal, visual, operator modes)

"Linting
let g:pymode_lint_checker = "pyflakes,pep8"
" Auto check on save
let g:pymode_lint_write = 1

" Turn off rope completion. Let Jedi do it
let g:pymode_rope_completion = 0

" Don't autofold code
let g:pymode_folding = 0

" Jedi rename keybinding conflicts with pymode 'run python code'
let g:jedi#rename_command = '<leader>re'

" automatically change window's cwd to file's dir
set autochdir

" Use spaces, not tabs
set tabstop=4

" more subtle popup colors
if has ('gui_running')
    highlight Pmenu guibg=#cccccc gui=bold
endif

" Powerline setup
set guifont=Source\ Code\ Pro\ for\ Powerline
set laststatus=2

" NERDTree setup
map <F3>  :NERDTreeToggle<CR>

" Supertab / jedi-vimi
""" python/supertab
let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
set completeopt=menuone,longest,preview
let g:jedi#popup_on_dot = 0

" Tagbar keymap
nmap <F4> :TagbarToggle<CR>

"##############################################################################                                                                         
" Easier split navigation                                                                                                                               
"##############################################################################                                                                         

" Use ctrl-[hjkl] to select the active split!
nmap <silent> <c-k> :wincmd k<CR>                                                                                                                       
nmap <silent> <c-j> :wincmd j<CR>                                                                                                                       
nmap <silent> <c-h> :wincmd h<CR>                                                                                                                       
nmap <silent> <c-l> :wincmd l<CR>

set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

let mapleader=","

set tabstop=4       " Number of spaces that a <Tab> in the file counts for.
 
set shiftwidth=4    " Number of spaces to use for each step of (auto)indent.
 
set expandtab       " Use the appropriate number of spaces to insert a <Tab>.
                    " Spaces are used in indents with the '>' and '<' commands
                    " and when 'autoindent' is on. To insert a real tab when
                    " 'expandtab' is on, use CTRL-V <Tab>.

set nowrap

set backspace=indent,eol,start

set hidden

set smarttab        " When on, a <Tab> in front of a line inserts blanks
                    " according to 'shiftwidth'. 'tabstop' is used in other
                    " places. A <BS> will delete a 'shiftwidth' worth of space
                    " at the start of the line.

set number          " Show line numbers.

set showmatch       " When a bracket is inserted, briefly jump to the matching
                    " one. The jump is only done if the match can be seen on the
                    " screen. The time to show the match can be set with
                    " 'matchtime'.

set history=1000    " keep 3000 lines of command line history

set undolevels=1000

set magic           " Enable the "magic"

set scrolloff=3     " keep at least 3 lines above/below

set noautowrite     " don't automagically write on :next

set hlsearch        " When there is a previous search pattern, highlight all
                    " its matches.
 
set incsearch       " While typing a search command, show immediately where the
                    " so far typed pattern matches.
 
set ignorecase      " Ignore case in search patterns.
 
set smartcase       " Override the 'ignorecase' option if the search pattern
                    " contains upper case characters.

set autoindent      " Copy indent from current line when starting a new line
set smartindent     " (typing <CR> in Insert mode or when using the "o" or "O"
                    " command).
set shiftwidth=4
set shiftround      " Use multiple of shiftwidth when indenting with '<' and '>'
set autoread        " watch for file changes

set cursorline      " show the cursor line

set wildmenu        " menu has tab completion

set showfulltag     " show full completion tags

set showcmd         " Show us the command we're typing
set showfulltag     " show full completion tags
set showmode        " show the mode all the time

set ruler           " Show the line and column number of the cursor position,
                    " separated by a comma.

set mouse=a         " Enable the use of the mouse.

set pastetoggle=<F2>

" Quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

if has('autocmd')
    autocmd filetype python set expandtab
    autocmd filetype html,xml set listchars-=tab:>.
endif

if &t_Co >= 256 || has("gui_running")
    colorscheme molokai
endif

if &t_Co > 2 || has("gui_running")
   " switch syntax highlighting on, when the terminal has colors
   syntax on
endif

set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.

